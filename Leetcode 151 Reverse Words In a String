//Approach 1

class Solution {
public:
    string reverseWords(string s) {
         vector<string>result;
         int i=0;
         int j=0;
         int n=s.length();
         string ans="";
         while(i<n){
            while(i<n&&s[i]==' ') i++;
              if(i>=n) break;
              int j=i;
              while(j<n&& s[j]!=' ') j++;
              result.push_back(s.substr(i,j-i));
              i=j;
         }  
         reverse(result.begin(),result.end());
         for(int i=0;i<result.size();i++){
            ans+=result[i];
           if(i<result.size()-1) ans+=" ";
         }
         return ans;
    }
};



//Approach2

class Solution {
public:
    string reverseWords(string s) {
        stringstream ss(s);string result="";
        string token="";
        while(ss>>token){
            result=token+" "+result;
        }
        return result.substr(0,result.length()-1);
    }
};
